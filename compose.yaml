services:
  db:
    image: postgres:17-alpine
    ports:
      - "127.0.0.1:${DB_PORT:-5432}:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: backend
    image: time-manager-backend:dev
    ports:
      - "127.0.0.1:${SERVER_PORT:-8080}:8080"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      mailpit:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SPRING_PROFILES_ACTIVE: dev
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    image: time-manager-frontend:dev
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      BACKEND_URL: http://backend:8080
    volumes:
      # Only cache pub dependencies - Docker Compose watch handles source sync
      - flutter_pub_cache:/root/.pub-cache

    networks:
      - internal
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s -o /dev/null http://localhost:8080 || exit 0"]
      interval: 50s
      timeout: 10s
      retries: 3
      start_period: 30s
    develop:
      watch:
        # Sync Dart source files and trigger hot reload
        - action: sync+restart
          path: ./frontend/time_manager/lib
          target: /app/lib
          ignore:
            - "**/*.tmp"
            - "**/*.dart_tool"
        # Sync web assets (HTML, manifest, etc.)
        - action: sync+restart
          path: ./frontend/time_manager/web
          target: /app/web
        # Rebuild when dependencies change
        - action: rebuild
          path: ./frontend/time_manager/pubspec.yaml
          target: /app/pubspec.yaml

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "127.0.0.1:${MAILPIT_SMTP_PORT:-1025}:1025"  # SMTP port
      - "127.0.0.1:${MAILPIT_WEB_PORT:-8025}:8025"   # Web UI port
    restart: unless-stopped
    networks:
      - internal
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:8025/api/v1/info || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  flutter_pub_cache:

networks:
  internal:
    driver: bridge