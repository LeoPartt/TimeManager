name: PR Validation

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main
      - develop

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  backend-validation:
    name: Backend - Build, Test & Coverage
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Compile backend
        run: |
          cd backend
          ./mvnw clean compile

      - name: Run tests with coverage
        run: |
          cd backend
          ./mvnw test jacoco:report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/target/site/jacoco/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: backend/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 0
          min-coverage-changed-files: 0
          title: Backend Code Coverage

  frontend-validation:
    name: Frontend - Analyze, Test & Coverage
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd frontend/time_manager
          flutter pub get

      - name: Analyze code
        run: |
          cd frontend/time_manager
          flutter analyze

      - name: Check formatting
        run: |
          cd frontend/time_manager
          dart format --set-exit-if-changed . || echo "Code not formatted (run 'dart format .')"

      - name: Run tests with coverage
        run: |
          cd frontend/time_manager
          flutter test --coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: frontend/time_manager/coverage/
          retention-days: 30

      - name: Generate coverage summary
        if: always()
        run: |
          if [ -f frontend/time_manager/coverage/lcov.info ]; then
            echo "Coverage report generated"
            # Optionnel : installer lcov et générer un résumé
            # sudo apt-get install -y lcov
            # genhtml frontend/time_manager/coverage/lcov.info -o frontend/time_manager/coverage/html
          else
            echo "No coverage data (tests not implemented yet)"
          fi

  validation-complete:
    name: Validation Complete
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-validation, frontend-validation]
    if: always()
    steps:
      - name: Check validation results
        run: |
          backend_result="${{ needs.backend-validation.result }}"
          frontend_result="${{ needs.frontend-validation.result }}"

          if [[ "$backend_result" == "success" || "$backend_result" == "skipped" ]] && \
             [[ "$frontend_result" == "success" || "$frontend_result" == "skipped" ]]; then
            echo "Validation passed"
            exit 0
          else
            echo "Validation failed"
            echo "Backend: $backend_result"
            echo "Frontend: $frontend_result"
            exit 1
          fi
